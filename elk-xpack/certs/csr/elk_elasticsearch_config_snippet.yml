# This is a configuration snippet for the node elk
# Before you can proceed with configuration, you need to pass the generated signing request which can be found in the
# file elk.csr and elk_http.csr to your PKI in order to get the actual certificates.
# If you do not have a PKI, you can use this tool with the options --create-ca and --create-cert to create a self signed CA
# and sign the certificates with that CA.

# The generated certificates need to be copied to the config directory of the node's ElasticSearch installation.
# Furthermore, the private key files (with the suffix .key) generated by this tool need to be copied to that directory
# as well.

# This config snippet needs to be inserted into the file elasticsearch.yml which can be also found in the config dir.
# If the config file already contains SearchGuard configuration, this needs to be replaced.
# References to the PEM files for certificates need to be adjusted to match the names of the generated certificates.

# Please refer to http://docs.search-guard.com/latest/configuring-tls for further configuration of your installation.


searchguard.ssl.transport.pemcert_filepath: <path to transport certificate for elk>
searchguard.ssl.transport.pemkey_filepath: csr/elk.key
searchguard.ssl.transport.pemtrustedcas_filepath: <add path to trusted ca>
searchguard.ssl.transport.enforce_hostname_verification: false
searchguard.ssl.transport.resolve_hostname: false
searchguard.ssl.http.enabled: true
searchguard.ssl.http.pemcert_filepath: <path to HTTP certificate for elk>
searchguard.ssl.http.pemkey_filepath: csr/elk_http.key
searchguard.ssl.http.pemtrustedcas_filepath: <add path to trusted ca>
searchguard.nodes_dn:
- CN=elk.example.com,OU=Ops,O=Example Com\, Inc.,DC=example,DC=com
searchguard.authcz.admin_dn:
- CN=sgadmin,OU=Ops,O=Example Com\, Inc.,DC=example,DC=com
